// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WAS.Context;

namespace WAS.Context.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230829052542_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("WAS.Model.Admin.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Steel"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "Rebar"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Automation"
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Hr"
                        });
                });

            modelBuilder.Entity("WAS.Model.Admin.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DesignationId");

                    b.ToTable("Designation");

                    b.HasData(
                        new
                        {
                            DesignationId = 1,
                            DepartmentId = 1,
                            DesignationName = "Modeler"
                        },
                        new
                        {
                            DesignationId = 2,
                            DepartmentId = 1,
                            DesignationName = "Checker"
                        },
                        new
                        {
                            DesignationId = 3,
                            DepartmentId = 1,
                            DesignationName = "Detailer"
                        },
                        new
                        {
                            DesignationId = 4,
                            DepartmentId = 1,
                            DesignationName = "Developer"
                        },
                        new
                        {
                            DesignationId = 5,
                            DepartmentId = 1,
                            DesignationName = "HOD"
                        },
                        new
                        {
                            DesignationId = 6,
                            DepartmentId = 1,
                            DesignationName = "TL"
                        });
                });

            modelBuilder.Entity("WAS.Model.Admin.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfJoining")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("EmailID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("ExperianceInThisDep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RepotingPersonId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Timestamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalExperiance")
                        .HasColumnType("int");

                    b.Property<string>("TypesOfJobHandle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("LocationId");

                    b.HasIndex("RepotingPersonId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Chennai",
                            BloodGroup = "O+",
                            ConfirmPassword = "zxzZoZhWLPpvHqvau3cfzg==",
                            DOB = "30/07/2023",
                            DateOfJoining = "26/07/2023",
                            DepartmentId = 1,
                            DesignationId = 3,
                            EmailID = "ks@gmail.com",
                            EmployeeId = "2701",
                            Gender = 1,
                            LocationId = 1,
                            MobileNumber = "9597073502",
                            Name = "Kishore S",
                            Password = "zxzZoZhWLPpvHqvau3cfzg==",
                            RoleId = 2,
                            Timestamp = "29-08-2023",
                            TotalExperiance = 2,
                            UserName = "2701"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Chennai",
                            BloodGroup = "O+",
                            ConfirmPassword = "zxzZoZhWLPpvHqvau3cfzg==",
                            DOB = "30/07/2023",
                            DateOfJoining = "26/07/2023",
                            DepartmentId = 1,
                            DesignationId = 5,
                            EmailID = "ks@gmail.com",
                            EmployeeId = "2702",
                            Gender = 1,
                            LocationId = 1,
                            MobileNumber = "9597073502",
                            Name = "Srivathsan",
                            Password = "zxzZoZhWLPpvHqvau3cfzg==",
                            RoleId = 3,
                            Timestamp = "29-08-2023",
                            TotalExperiance = 2,
                            UserName = "2702"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Chennai",
                            BloodGroup = "O+",
                            ConfirmPassword = "zxzZoZhWLPpvHqvau3cfzg==",
                            DOB = "30/07/2023",
                            DateOfJoining = "26/07/2023",
                            DepartmentId = 1,
                            DesignationId = 6,
                            EmailID = "ks@gmail.com",
                            EmployeeId = "2703",
                            Gender = 1,
                            LocationId = 1,
                            MobileNumber = "9597073502",
                            Name = "Sivahari Senthilkumar",
                            Password = "zxzZoZhWLPpvHqvau3cfzg==",
                            RoleId = 4,
                            Timestamp = "29-08-2023",
                            TotalExperiance = 2,
                            UserName = "2703"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Chennai",
                            BloodGroup = "O+",
                            ConfirmPassword = "zxzZoZhWLPpvHqvau3cfzg==",
                            DOB = "30/07/2023",
                            DateOfJoining = "26/07/2023",
                            DepartmentId = 1,
                            DesignationId = 2,
                            EmailID = "ks@gmail.com",
                            EmployeeId = "2704",
                            Gender = 1,
                            LocationId = 1,
                            MobileNumber = "9597073502",
                            Name = "Ashok",
                            Password = "zxzZoZhWLPpvHqvau3cfzg==",
                            RoleId = 4,
                            Timestamp = "29-08-2023",
                            TotalExperiance = 2,
                            UserName = "2704"
                        });
                });

            modelBuilder.Entity("WAS.Model.Admin.Holiday", b =>
                {
                    b.Property<int>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("HolidayDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HolidayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HolidayId");

                    b.ToTable("Holiday");
                });

            modelBuilder.Entity("WAS.Model.Admin.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            LocationName = "Chennai"
                        },
                        new
                        {
                            LocationId = 2,
                            LocationName = "Trichy"
                        },
                        new
                        {
                            LocationId = 3,
                            LocationName = "Thane"
                        },
                        new
                        {
                            LocationId = 4,
                            LocationName = "Nashik"
                        });
                });

            modelBuilder.Entity("WAS.Model.Admin.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            RoleName = "Super Admin"
                        },
                        new
                        {
                            RoleID = 2,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = 3,
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleID = 4,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("WAS.Model.Manager.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ActualEndDt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActualStartDt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientJobNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ConnectionH")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MainCheckersNdPercent")
                        .HasColumnType("float");

                    b.Property<double>("MainDetilersNdPercent")
                        .HasColumnType("float");

                    b.Property<double>("MainH")
                        .HasColumnType("float");

                    b.Property<double>("MainModelersNdPercent")
                        .HasColumnType("float");

                    b.Property<int>("MainSDt")
                        .HasColumnType("int");

                    b.Property<string>("MainStartDt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MiscCheckersNdPercent")
                        .HasColumnType("float");

                    b.Property<double>("MiscDetilersNdPercent")
                        .HasColumnType("float");

                    b.Property<double>("MiscH")
                        .HasColumnType("float");

                    b.Property<double>("MiscModelersNdPercent")
                        .HasColumnType("float");

                    b.Property<int>("MiscSDt")
                        .HasColumnType("int");

                    b.Property<string>("MiscStartDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PGTJobNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PlannedBudget")
                        .HasColumnType("float");

                    b.Property<string>("PlannedEndDt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlannedStartDt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ratio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("StairH")
                        .HasColumnType("float");

                    b.Property<string>("TimeStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalH")
                        .HasColumnType("float");

                    b.Property<double>("WHPerday")
                        .HasColumnType("float");

                    b.HasKey("ProjectId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("WAS.Model.Manager.ProjectEstimation", b =>
                {
                    b.Property<int>("ProjectEstimationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("IFAr1r2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IFFr1r2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MainCNd")
                        .HasColumnType("float");

                    b.Property<double>("MainDNd")
                        .HasColumnType("float");

                    b.Property<double>("MainMNd")
                        .HasColumnType("float");

                    b.Property<string>("MainSubmissionDt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MiscCNd")
                        .HasColumnType("float");

                    b.Property<double>("MiscDNd")
                        .HasColumnType("float");

                    b.Property<double>("MiscMNd")
                        .HasColumnType("float");

                    b.Property<string>("MiscSubmissionDt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<double>("ResourcesMain")
                        .HasColumnType("float");

                    b.Property<double>("ResourcesMisc")
                        .HasColumnType("float");

                    b.HasKey("ProjectEstimationId");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("ProjectEstimation");
                });

            modelBuilder.Entity("WAS.Model.Admin.Employee", b =>
                {
                    b.HasOne("WAS.Model.Admin.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAS.Model.Admin.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAS.Model.Admin.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAS.Model.Admin.Employee", "ReportingTo")
                        .WithMany("DirectReports")
                        .HasForeignKey("RepotingPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WAS.Model.Admin.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("Location");

                    b.Navigation("ReportingTo");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WAS.Model.Manager.ProjectEstimation", b =>
                {
                    b.HasOne("WAS.Model.Manager.Project", null)
                        .WithOne("ProjectEstimation")
                        .HasForeignKey("WAS.Model.Manager.ProjectEstimation", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WAS.Model.Admin.Employee", b =>
                {
                    b.Navigation("DirectReports");
                });

            modelBuilder.Entity("WAS.Model.Manager.Project", b =>
                {
                    b.Navigation("ProjectEstimation");
                });
#pragma warning restore 612, 618
        }
    }
}
